{"version":3,"sources":["nav_bar/nav_bar.jsx","headers/header.jsx","about/about.jsx","portfolio_header/portfolio_header.jsx","project/project.jsx","contact/contact.jsx","root.jsx","serviceWorker.js","index.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","listenToScroll","scrolled","document","body","scrollTop","documentElement","scrollHeight","clientHeight","setState","windowPos","state","window","addEventListener","removeEventListener","react_default","a","createElement","className","href","Component","Header","About","id","PortfolioHeader","title","Project","description","technologies","linkName","linkType","src","imageUrl","alt","Contact","Root","nav_bar_NavBar","header_Header","portfolio_header_PortfolioHeader","project_Project","about_About","contact_Contact","Boolean","location","hostname","match","ReactDOM","render","root_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eef26e81.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './nav_bar.css';\n\nexport default class NavBar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            windowPos: 0\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.listenToScroll)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.listenToScroll)\n    }\n\n    listenToScroll = () => {\n        const winScroll =\n            document.body.scrollTop || document.documentElement.scrollTop\n\n        const height =\n            document.documentElement.scrollHeight -\n            document.documentElement.clientHeight\n\n        const scrolled = (winScroll / height)\n\n        this.setState({\n            windowPos: scrolled,\n        })\n    }\n\n    render() {\n        if (this.state.windowPos > 0.113) {\n            return (\n                <div className=\"nav-bar-v\">\n                    <div className=\"nav-bar-content-v\">\n                        <a href=\"#WEB\"><button className=\"nav-bar-button-v\"><b>WEB APPS</b></button></a>\n                        <a href=\"#iOS\"><button className=\"nav-bar-button-v\"><b>iOS APPS</b></button></a>\n                        <a href=\"#about\"><button className=\"nav-bar-button-v\"><b>ABOUT ME</b></button></a>\n                        <a href=\"#contact\"><button className=\"nav-bar-button-v\"><b>CONTACT</b></button></a>\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"nav-bar\">\n                    <div className=\"nav-bar-content\">\n                        <a href=\"#WEB\"><button className=\"nav-bar-button\"><b>WEB APPS</b></button></a>\n                        <a href=\"#iOS\"><button className=\"nav-bar-button\"><b>iOS APPS</b></button></a>\n                        <a href=\"#about\"><button className=\"nav-bar-button\"><b>ABOUT ME</b></button></a>\n                        <a href=\"#contact\"><button className=\"nav-bar-button\"><b>CONTACT</b></button></a>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n","import React, { Component } from 'react';\nimport './header.css';\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <div className=\"header-color\">\n                    <div className=\"header-content-container\">\n                        <h1 className=\"header-name\">Wesley Arrington</h1>\n                        <h2 className=\"header-name-desc\">I'm a SF Bay Area based designer & front‑end developer focused on crafting clean  & user‑friendly experiences.</h2>\n                        <div className=\"simple-row\">\n                            <a href=\"#WEB\"><button className=\"header-work-button\">Check Web Work</button></a>\n                            <a href=\"#iOS\"><button className=\"header-work-button\">Check iOS Work</button></a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './about.css'\n\nexport default class About extends Component {\n    render() {\n        return (\n            <div className=\"about\" >\n                <div id=\"about\"></div>\n                <div className=\"about-color\">\n                    <div className=\"about-content-container\">\n                        <h1 className=\"about-me-title\">ABOUT ME</h1>\n                        <p>\n                            I'm a designer & front-end developer early in my career. I'm interested in all kinds of visual communication, \n                            but my major focus is on designing and building web, mobile & tablet interfaces. \n                            {/* I also have skills in other fields like blockchain technology specifically Ethereum. */}\n                        </p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './portfolio_header.css'\n\nexport default class PortfolioHeader extends Component {\n    render() {\n        return (\n            <div className=\"portfolio-header\">\n                <div id={this.props.title}></div>\n                <div className=\"portfolio-header-content-container\">\n                    <h1 className=\"portfolio-header-title\">{this.props.title} PORTFOLIO</h1>\n                    <h3 className=\"portfolio-header-info\">\n                        Below you can see some projects \n                        I've completed along with the technologies used. \n                    </h3>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './project.css'\n\nexport default class Project extends Component {\n    render() {\n        return (\n            <div className=\"project\">\n                    <div className=\"simple-column\">\n                        \n                        <div className=\"simple-row\">\n                            <div className=\"project-right-side\">\n                                <h1 className=\"project-title\">{this.props.title}</h1>\n                                <div className=\"project-text-container-div\">\n                                    <h3 className=\"project-description\">{this.props.description}</h3>\n                                    <h3 className=\"project-technologies\">{this.props.technologies}</h3>\n                                </div>\n                                <div className=\"button-container-div\">\n                                    <a href={this.props.linkName}>\n                                        <button className=\"project-link-button\"><b>{this.props.linkType}</b></button>\n                                    </a>\n                                </div>\n                            </div>\n                            <div className=\"project-image-div\">\n                                <img src={this.props.imageUrl} alt=\"\" className=\"project-image\" />\n                            </div>\n                            \n                        </div>\n                    </div>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './contact.css'\n\nexport default class Contact extends Component {\n    render() {\n        return (\n            <div className=\"contact\">\n                <div id=\"contact\"></div>\n                <div className=\"contact-content-container\">\n                    <h1 className=\"contact-title\">OK, LET’S CREATE SOMETHING GREAT</h1>\n                    <h3>If you like my work and have some cool \n                        project to work on, just send me direct \n                        message or contact me through social \n                        sites listed below.\n                    </h3>\n                    <a href=\"https://www.linkedin.com/in/wesley-arrington/\"><button className=\"contact-button\"><b>Get in Touch</b></button></a>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport NavBar from './nav_bar/nav_bar';\nimport Header from './headers/header';\nimport About from './about/about';\nimport PortfolioHeader from './portfolio_header/portfolio_header';\nimport Project from './project/project';\nimport Contact from './contact/contact';\nimport './stylesheets/reset.css';\nimport './stylesheets/style.css';\n\n\nexport default class Root extends Component {\n    render() {\n        return (\n            <div>\n                <NavBar />\n                <Header />   \n                <PortfolioHeader title={\"WEB\"}/> \n                <Project linkType=\"Live Link\" linkName=\"https://gogo-heroku-clone.herokuapp.com/#/\" title={\"GoGo\"} imageUrl={\"computer_background_gogo.png\"} description={\"Description: A site which mimics Indiegogo in style and functionality. Has the ability to create campaigns and contribute to those campaigns.\"} technologies={\"Technologies: React, Redux, Ruby, Rails 5, Ajax, CSS, Javascript\"}/>\n                <Project linkType=\"Live Link\" linkName=\"http://multi-go.herokuapp.com/#/\" title={\"Multi-Go\"} imageUrl={\"computer_background_multi.png\"} description={\"Description: Go is a classic board game typically played with two players. We made an online go game where play go variations online.\"} technologies={\"Technologies: React, Redux, MongoDB, Express, Javascript, Node\"}/>\n                {/* <Project linkName=\"Live Link\" title={\"EthStats (in development)\"} imageUrl={\"place.png\"} description={\"Description ......\"} technologies={\"Technologies ......\"}/> */}\n                <PortfolioHeader title={\"iOS\"} /> \n                <Project linkType=\"App Store Link\" linkName=\"https://apps.apple.com/us/app/inscribe-widget-notes/id1204500180\" title={\"Inscribe - Widget Notes\"} imageUrl={\"portfolio_background_notes.png\"} description={\"Description: Inscribe has been built from the bottom up to have the best widget. Any notes above the gray bar will be shown in the widget. All the notes can be easily rearranged allowing for whichever note has top priority to be at the top in the widget.\"} technologies={\"Technologies: Xcode, Swift, App Extensions\"} />\n                <Project linkType=\"App Store Link\" linkName=\"https://apps.apple.com/us/app/rap-horn-sound-generator/id1144199229\" title={\"Rap Horn - Sound Generator\"} imageUrl={\"portfolio_background_rap.png\"} description={\"Description: Announce your arrival in style with a rap horn to let others know how cool you are. Alternatively announce your entrance to with the Epic Sax. These sound effects add vast amounts of depth to any conversation, so feel free to play them at any time. It doesn't matter if it's during a movie, a class or a moment of silence. These sound effects add to any moment so feel free to play them whenever.\"} technologies={\"Technologies: Xcode, Swift, AVAudio\"} />\n                {/* <Project linkName=\"App Store Link\" title={\"QR Create - QR Generator\"} imageUrl={\"qr.jpg\"} description={\"Description ......\"} technologies={\"Technologies ......\"} /> */}\n                <About />\n                <Contact />\n            </div>\n        )\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}